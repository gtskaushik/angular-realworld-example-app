name: Frontend Pipeline
on:
  # Manually trigger workflow runs
  workflow_dispatch:
  # Trigger the workflow on push from the main branch
  push:
    branches:
      - main
jobs:
  frontend:
    name: Build frontend app
    # Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    steps:
      # Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v3

      # Set up node and npm
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      # Run the build
      - run: npm ci
      - name: Build
        run: npm run build -prod
      - name: Lint
        run: npm run lint

      # Create and print the new version
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H.%M.%S')"
      - name: Print version
        run: echo "Version - ${{ steps.date.outputs.date }}"

      # Docker build step
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Docker build & push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/toptal-frontend:${{ steps.date.outputs.date }}
          context: .
          file: Dockerfile

      # Create a new git tag
      - uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.date.outputs.date }}
          message: "TAG was created at ${{ steps.date.outputs.date }}"




      # Below is all temporary
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.1
      - uses: actions-hub/kubectl@master
      # Check versions
      - name: Check versions of aws,terraform,kubectl
        run: aws --version && terraform -version && kubectl version
